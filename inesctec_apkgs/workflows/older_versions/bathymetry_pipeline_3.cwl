cwlVersion: v1.2

$namespaces:
  s: https://schema.org/
  ogc: http://www.opengis.net/def/media-type/ogc/1.0/

$graph:

- class: Workflow
  id: bathymetry_pipeline_3
  inputs:
    lon_min:
      type: float
      label: Minimum Longitude
      doc: The minimum longitude of the study area
    lon_max:
      type: float
      label: Maximum Longitude
      doc: The maximum longitude of the study area
    lat_min:
      type: float
      label: Minimum Latitude
      doc: The minimum latitude of the study area
    lat_max:
      type: float
      label: Maximum Latitude
      doc: The maximum latitude of the study area
  steps:
    step_bathymetry:
      run: '#bathymetry'
      in:
        lon_min: lon_min
        lon_max: lon_max
        lat_min: lat_min
        lat_max: lat_max
      out:
      - result
      - metadata
    step_2stac:
      run: '#2stac'
      in:
        result: step_bathymetry/result
        metadata: step_bathymetry/metadata
      out:
      - results

  outputs:
  - id: wf_outputs
    outputSource:
    - step_2stac/results
    type:
      Directory

  s:name: Bathymetry for a given area to STAC
  s:description: Bathymetry for a given area to STAC
  s:keywords:
    - bathymetry
    - stac
  s:programmingLanguage: python
  s:sourceOrganization:
    - class: s:Organization
      s:name: INESCTEC
      s:url: https://inesctec.pt
  s:author:
    - class: s:Person
      s:name: Miguel Correia
      s:email: miguel.r.correia@inesctec.pt
  s:codeRepository: https://pipe-drive.inesctec.pt/application-packages/workflows/bathymetry/bathymetry_pipeline.cwl
  s:dateCreated: "2024-11-15T17:30:00Z"


# tools
- class: CommandLineTool

  id: bathymetry

  baseCommand: python
  arguments:
  - /opt/bathymetry.py
  - --lon_min
  - valueFrom: $( inputs.lon_min )
  - --lon_max
  - valueFrom: $( inputs.lon_max )
  - --lat_min
  - valueFrom: $( inputs.lat_min )
  - --lat_max
  - valueFrom: $( inputs.lat_max )

  inputs:
    lon_min:
      type: float
      doc: The minimum longitude of the study area.
    lon_max:
      type: float
      doc: The maximum longitude of the study area.
    lat_min:
      type: float
      doc: The minimum latitude of the study area.
    lat_max:
      type: float
      doc: The maximum latitude of the study area.

  outputs:
    result:
      format: ogc:netcdf
      type: File
      outputBinding:
        glob: "result/out.nc"
      doc: |
        The output NetCDF file generated by the bathymetry model.
        The file is in the OGC NetCDF media type.
    metadata:
      type: File
      outputBinding:
        glob: "result/metadata.json"
      doc: metadata description

  requirements:
    NetworkAccess:
        networkAccess: true
    EnvVarRequirement:
      envDef:
        PATH: /opt/conda/envs/application/bin:/opt/conda/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
        # GEBCO_URL: https://pipe-drive.inesctec.pt/inputs/GEBCO_2014_1D.nc
    ResourceRequirement: {}
    InlineJavascriptRequirement: {}
    DockerRequirement:
      dockerPull: iliad-repository.inesctec.pt/bathymetry-forth:0.1.0

  s:name: Bathymetry for given bounding box
  s:description: Get bathymetry to a given bounding box. You can define an outside source.
  s:keywords:
    - bathymetry
    - bounding box
  s:softwareVersion: 0.1.0
  s:programmingLanguage: python
  s:sourceOrganization:
    - class: s:Organization
      s:name: INESCTEC
      s:url: https://inesctec.pt
    - class: s:Organization
      s:name: FORTH
      s:url: https://forth.gr
  s:author:
    - class: s:Person
      s:email: kspanoudaki@gmail.com
      s:name: Katerina Spanoudaki
  s:contributor:
    - class: s:Person
      s:email: miguel.r.correia@inesctec.pt
      s:name: Miguel Correia
  s:codeRepository: https://pipe-drive.inesctec.pt/application-packages/tools/bathymetry-forth/bathymetry_forth_0_1_0.cwl
  s:dateCreated: "2024-11-14T19:47:14Z"

- class: CommandLineTool

  id: 2stac

  baseCommand: python
  arguments:
  - /opt/2stac.py
  - --result
  - valueFrom: $( inputs.result )
  - --metadata
  - valueFrom: $( inputs.metadata )

  inputs:
    result:
      type: File
      doc: The resulting file of the previous model to insert in STAC
    metadata:
      type: File
      doc: The resulting metadata of the previous model to insert in STAC

  outputs:
    results:
      outputBinding:
        glob: .
      type: Directory
      doc: STAC output

  requirements:
    ResourceRequirement: {}
    InlineJavascriptRequirement: {}
    DockerRequirement:
      dockerPull: iliad-repository.inesctec.pt/2stac:0.1.0

  s:name: 2Stac
  s:softwareVersion: 0.1.0
  s:description: Transform the result into a STAC
  s:keywords:
    - stac
    - metadata
  s:programmingLanguage: python
  s:sourceOrganization:
    - class: s:Organization
      s:name: INESCTEC
      s:url: https://inesctec.pt
  s:author:
    - class: s:Person
      s:name: Miguel Correia
      s:email: miguel.r.correia@inesctec.pt
  s:codeRepository: https://pipe-drive.inesctec.pt/application-packages/tools/2stac/2stac_0_1_0.cwl
  s:dateCreated: "2024-11-14T19:46:28Z"